syntax = "proto3";
package secret.compute.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/scrtlabs/SecretNetwork/x/compute/internal/types";
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.equal_all) = true;

enum AccessType {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = false;
  UNDEFINED = 0 [ (gogoproto.enumvalue_customname) = "AccessTypeUndefined" ];
  NOBODY = 1 [ (gogoproto.enumvalue_customname) = "AccessTypeNobody" ];
  ONLY_ADDRESS = 2
      [ (gogoproto.enumvalue_customname) = "AccessTypeOnlyAddress" ];
  EVERYBODY = 3 [ (gogoproto.enumvalue_customname) = "AccessTypeEverybody" ];
}

message AccessTypeParam {
  option (gogoproto.goproto_stringer) = true;
  AccessType value = 1 [ (gogoproto.moretags) = "yaml:\"value\"" ];
}

// CodeInfo is data for the uploaded contract WASM code
message CodeInfo {
  bytes code_hash = 1;
  bytes creator = 2 [ (gogoproto.casttype) =
                          "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  string source = 3;
  string builder = 4;
}

message ContractKey {
  bytes og_contract_key = 1;
  bytes current_contract_key = 2;
  bytes current_contract_key_proof = 3;
}

message ContractCustomInfo {
  ContractKey enclave_key = 1 [ (gogoproto.customname) = "EnclaveKey" ];
  string label = 2;
}

// ContractInfo stores a WASM contract instance
message ContractInfo {
  // CodeID is the reference to the stored Wasm code
  uint64 code_id = 1 [ (gogoproto.customname) = "CodeID" ];
  // Creator address who initially instantiated the contract
  bytes creator = 2 [ (gogoproto.casttype) =
                          "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  // Label is mandatory metadata to be stored with a contract instance.
  string label = 4;
  // Created Tx position when the contract was instantiated.
  AbsoluteTxPosition created = 5;
  string ibc_port_id = 6 [ (gogoproto.customname) = "IBCPortID" ];
  // Admin is an optional address that can execute migrations
  string admin = 7;
  // Proof that enclave executed the instantiate command
  bytes admin_proof = 8;
}

// AbsoluteTxPosition can be used to sort contracts
message AbsoluteTxPosition {
  // BlockHeight is the block the contract was created at
  int64 block_height = 1;
  // TxIndex is a monotonic counter within the block (actual transaction index,
  // or gas consumed)
  uint64 tx_index = 2;
}

// Model is a struct that holds a KV pair
message Model {
  // hex-encode key to read it better (this is often ascii)
  bytes Key = 1 [ (gogoproto.casttype) =
                      "github.com/cometbft/cometbft/libs/bytes.HexBytes" ];
  // base64-encode raw value
  bytes Value = 2;
}

// ContractCodeHistoryOperationType actions that caused a code change
enum ContractCodeHistoryOperationType {
  option (gogoproto.goproto_enum_prefix) = false;
  // ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
  CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) =
            "ContractCodeHistoryOperationTypeUnspecified" ];
  // ContractCodeHistoryOperationTypeInit on chain contract instantiation
  CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT = 1
      [ (gogoproto.enumvalue_customname) =
            "ContractCodeHistoryOperationTypeInit" ];
  // ContractCodeHistoryOperationTypeMigrate code migration
  CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE = 2
      [ (gogoproto.enumvalue_customname) =
            "ContractCodeHistoryOperationTypeMigrate" ];
  // ContractCodeHistoryOperationTypeGenesis based on genesis data
  CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS = 3
      [ (gogoproto.enumvalue_customname) =
            "ContractCodeHistoryOperationTypeGenesis" ];
}

// ContractCodeHistoryEntry metadata to a contract.
message ContractCodeHistoryEntry {
  ContractCodeHistoryOperationType operation = 1;
  // CodeID is the reference to the stored WASM code
  uint64 code_id = 2 [ (gogoproto.customname) = "CodeID" ];
  // Updated Tx position when the operation was executed.
  AbsoluteTxPosition updated = 3;
  bytes msg = 4;
}